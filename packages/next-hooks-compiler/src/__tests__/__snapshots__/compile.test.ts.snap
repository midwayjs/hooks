// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hooks/arrow.ts 1`] = `
// source
export const useDemo = (name: string) => {}

export const useArrow = (name: string) => {
  useDemo(name + '666')
}

export const useAsyncArrow = async (name: string) => {
  await useDemo(name + '666')
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAsyncArrow = exports.useArrow = exports.useDemo = void 0;
const useDemo = function useDemo(name) { const _req_ctx_ = this; };
exports.useDemo = useDemo;
const useArrow = function useArrow(name) { const _req_ctx_ = this; exports.useDemo.bind(_req_ctx_)(name + '666'); };
exports.useArrow = useArrow;
const useAsyncArrow = async function useAsyncArrow(name) { const _req_ctx_ = this; await exports.useDemo.bind(_req_ctx_)(name + '666'); };
exports.useAsyncArrow = useAsyncArrow;
//# sourceMappingURL=arrow.js.map
`;

exports[`hooks/arrow-default-export.ts 1`] = `
// source
export default async (name: string) => {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = async (name) => { };
//# sourceMappingURL=arrow-default-export.js.map
`;

exports[`hooks/builtin-hooks.ts 1`] = `
// source
import { useConfig, useContext, useInject, useLogger, usePlugin, useApp } from '@midwayjs/hooks'

export function useBuiltinHooks() {
  useConfig()
  useLogger()
  useContext()
  useInject('')
  usePlugin('')
  useApp()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBuiltinHooks = void 0;
const hooks_1 = require("@midwayjs/hooks");
function useBuiltinHooks() {
    const _req_ctx_ = this;
    _req_ctx_.ctx.hooks.useConfig();
    _req_ctx_.ctx.hooks.useLogger();
    _req_ctx_.ctx.hooks.useContext();
    _req_ctx_.ctx.hooks.useInject('');
    _req_ctx_.ctx.hooks.usePlugin('');
    _req_ctx_.ctx.hooks.useApp();
}
exports.useBuiltinHooks = useBuiltinHooks;
//# sourceMappingURL=builtin-hooks.js.map
`;

exports[`hooks/func-default-export.ts 1`] = `
// source
export default function (name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function default_1(name) { }
exports.default = default_1;
//# sourceMappingURL=func-default-export.js.map
`;

exports[`hooks/import-hook.ts 1`] = `
// source
import { useDemo } from './useDemo'
import { useContext } from '@midwayjs/hooks'

export function useQuery(name: any) {
  useContext()
  useDemo(name)
  console.log(useFakeHooks)
}

export class ThisNotHooks {}

export const useFakeHooks = ''


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFakeHooks = exports.ThisNotHooks = exports.useQuery = void 0;
const useDemo_1 = require("./useDemo");
const hooks_1 = require("@midwayjs/hooks");
function useQuery(name) {
    const _req_ctx_ = this;
    _req_ctx_.ctx.hooks.useContext();
    (typeof useDemo_1.useDemo === "function" ? useDemo_1.useDemo.bind(_req_ctx_) : useDemo_1.useDemo)(name);
    console.log(exports.useFakeHooks);
}
exports.useQuery = useQuery;
class ThisNotHooks {
}
exports.ThisNotHooks = ThisNotHooks;
exports.useFakeHooks = '';
//# sourceMappingURL=import-hook.js.map
`;

exports[`hooks/import-namespace.ts 1`] = `
// source
import * as hooks from './import-hook'

export function useNamespace() {
  const n = new hooks.ThisNotHooks()
  console.log(hooks.useFakeHooks)
  return hooks.useQuery(n)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useNamespace = void 0;
const hooks = require("./import-hook");
function useNamespace() {
    const _req_ctx_ = this;
    const n = new hooks.ThisNotHooks();
    console.log(hooks.useFakeHooks);
    return hooks.useQuery.bind(_req_ctx_)(n);
}
exports.useNamespace = useNamespace;
//# sourceMappingURL=import-namespace.js.map
`;

exports[`hooks/recursion.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function useRecursion(name: string) {
  const ctx = useContext()

  if (Math.random() <= 0.5) {
    return name
  }

  return useRecursion(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRecursion = void 0;
const hooks_1 = require("@midwayjs/hooks");
function useRecursion(name) {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    if (Math.random() <= 0.5) {
        return name;
    }
    return useRecursion.bind(_req_ctx_)(name);
}
exports.useRecursion = useRecursion;
//# sourceMappingURL=recursion.js.map
`;

exports[`hooks/useDemo.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function useDemo(name: string) {
  useContext()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDemo = void 0;
const hooks_1 = require("@midwayjs/hooks");
function useDemo(name) { const _req_ctx_ = this; _req_ctx_.ctx.hooks.useContext(); }
exports.useDemo = useDemo;
//# sourceMappingURL=useDemo.js.map
`;

exports[`lambda/arrow-hook-ref-arrow-hook.ts 1`] = `
// source
export const useQuery = (id: string) => {
  return ''
}

export const useInner = async () => {
  useQuery('123')
  const inner = () => {
    console.log(useQuery('123'))
  }
  inner()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInner = exports.useQuery = void 0;
const useQuery = function useQuery(id) { const _req_ctx_ = this; return ''; };
exports.useQuery = useQuery;
const useInner = async function useInner() {
    const _req_ctx_ = this;
    exports.useQuery.bind(_req_ctx_)('123');
    const inner = () => {
        console.log(exports.useQuery.bind(_req_ctx_)('123'));
    };
    inner();
};
exports.useInner = useInner;
//# sourceMappingURL=arrow-hook-ref-arrow-hook.js.map
`;

exports[`lambda/export-arrow.ts 1`] = `
// source
export const hello = (name: string) => {
  console.log(name)
}

const functionExpression = function () {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const hello = function hello(name) { const _req_ctx_ = this; console.log(name); };
exports.hello = hello;
const functionExpression = function () { };
//# sourceMappingURL=export-arrow.js.map
`;

exports[`lambda/export-default-anonymous.ts 1`] = `
// source
export default () => {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
async function $default() { const _req_ctx_ = this; }
exports.default = $default;
//# sourceMappingURL=export-default-anonymous.js.map
`;

exports[`lambda/export-default-async-arrow.ts 1`] = `
// source
import { useContext, useInject } from '@midwayjs/hooks'

export default async () => {
  const ctx = useContext()
  const baseDir = await useInject('baseDir')
  return ctx.path + baseDir
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hooks_1 = require("@midwayjs/hooks");
async function $default() {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    const baseDir = await _req_ctx_.ctx.hooks.useInject('baseDir');
    return ctx.path + baseDir;
}
exports.default = $default;
//# sourceMappingURL=export-default-async-arrow.js.map
`;

exports[`lambda/export-default-func.ts 1`] = `
// source
export default function (name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function $default(name) { const _req_ctx_ = this; }
exports.default = $default;
//# sourceMappingURL=export-default-func.js.map
`;

exports[`lambda/export-default-named.ts 1`] = `
// source
export default function named(name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function named(name) { const _req_ctx_ = this; }
exports.default = named;
//# sourceMappingURL=export-default-named.js.map
`;

exports[`lambda/hook-ref-hook.ts 1`] = `
// source
export function useQuery(id: string) {
  return ''
}

export async function useInner() {
  useQuery('123')
  const inner = () => {
    console.log(useQuery('123'))
  }
  inner()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInner = exports.useQuery = void 0;
function useQuery(id) { const _req_ctx_ = this; return ''; }
exports.useQuery = useQuery;
async function useInner() {
    const _req_ctx_ = this;
    useQuery.bind(_req_ctx_)('123');
    const inner = () => {
        console.log(useQuery.bind(_req_ctx_)('123'));
    };
    inner();
}
exports.useInner = useInner;
//# sourceMappingURL=hook-ref-hook.js.map
`;

exports[`lambda/hook-ref-lambda.ts 1`] = `
// source
export function hello() {
  normal()
}

function normal() {}

function useDemo(name: string) {
  return hello()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
function hello() { const _req_ctx_ = this; normal(); }
exports.hello = hello;
function normal() { }
function useDemo(name) { const _req_ctx_ = this; return hello.bind(_req_ctx_)(); }
//# sourceMappingURL=hook-ref-lambda.js.map
`;

exports[`lambda/import-hook.ts 1`] = `
// source
import { useDemo } from '../hooks/useDemo'

export function hello() {
  useDemo('666')
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
const useDemo_1 = require("../hooks/useDemo");
function hello() { const _req_ctx_ = this; (typeof useDemo_1.useDemo === "function" ? useDemo_1.useDemo.bind(_req_ctx_) : useDemo_1.useDemo)('666'); }
exports.hello = hello;
//# sourceMappingURL=import-hook.js.map
`;

exports[`lambda/index.ts 1`] = `
// source
export function hello() {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
function hello() { const _req_ctx_ = this; }
exports.hello = hello;
//# sourceMappingURL=index.js.map
`;

exports[`lambda/lambda-ref-hook.ts 1`] = `
// source
export function hello() {
  useDemo('666')
  normal()
}

function normal() {}

function useDemo(name: string) {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
function hello() {
    const _req_ctx_ = this;
    useDemo.bind(_req_ctx_)('666');
    normal();
}
exports.hello = hello;
function normal() { }
function useDemo(name) { const _req_ctx_ = this; }
//# sourceMappingURL=lambda-ref-hook.js.map
`;

exports[`lambda/lambda-ref-lambda.ts 1`] = `
// source
export function hello(name: string, value: string) {}

const hello3 = (name: string) => {}

export function hello2(name: string) {
  hello(name, '1')
  hello3(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello2 = exports.hello = void 0;
function hello(name, value) { const _req_ctx_ = this; }
exports.hello = hello;
const hello3 = (name) => { };
function hello2(name) {
    const _req_ctx_ = this;
    hello.bind(_req_ctx_)(name, '1');
    hello3(name);
}
exports.hello2 = hello2;
//# sourceMappingURL=lambda-ref-lambda.js.map
`;

exports[`lambda/normal-function.ts 1`] = `
// source
export function hello() {
  normal()
}

function normal() {}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hello = void 0;
function hello() { const _req_ctx_ = this; normal(); }
exports.hello = hello;
function normal() { }
//# sourceMappingURL=normal-function.js.map
`;

exports[`lambda/recursion.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export function recursion(name: string) {
  const ctx = useContext()

  if (Math.random() <= 0.5) {
    return name
  }

  return recursion(name)
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recursion = void 0;
const hooks_1 = require("@midwayjs/hooks");
function recursion(name) {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    if (Math.random() <= 0.5) {
        return name;
    }
    return recursion.bind(_req_ctx_)(name);
}
exports.recursion = recursion;
//# sourceMappingURL=recursion.js.map
`;

exports[`lambda/ref/bar.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'
import { refFoo, Foo } from './foo'

export async function bar() {
  const foo: Foo = ''
  const ctx = useContext()
  refFoo()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bar = void 0;
const hooks_1 = require("@midwayjs/hooks");
const foo_1 = require("./foo");
async function bar() {
    const _req_ctx_ = this;
    const foo = '';
    const ctx = _req_ctx_.ctx.hooks.useContext();
    (typeof foo_1.refFoo === "function" ? foo_1.refFoo.bind(_req_ctx_) : foo_1.refFoo)();
}
exports.bar = bar;
//# sourceMappingURL=bar.js.map
`;

exports[`lambda/ref/foo.ts 1`] = `
// source
import { useContext } from '@midwayjs/hooks'

export type Foo = any

export async function refFoo() {
  const ctx = useContext()
}


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.refFoo = void 0;
const hooks_1 = require("@midwayjs/hooks");
async function refFoo() { const _req_ctx_ = this; const ctx = _req_ctx_.ctx.hooks.useContext(); }
exports.refFoo = refFoo;
//# sourceMappingURL=foo.js.map
`;

exports[`lambda/with/export-default-arrow.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async () => {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function $default() {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    return 'xxx';
});
//# sourceMappingURL=export-default-arrow.js.map
`;

exports[`lambda/with/export-default-expression.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async function () {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function () {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    return 'xxx';
});
//# sourceMappingURL=export-default-expression.js.map
`;

exports[`lambda/with/export-default-named.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async function named() {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function named() {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    return 'xxx';
});
//# sourceMappingURL=export-default-named.js.map
`;

exports[`lambda/with/export-variable.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export const post = withController(
  {
    middleware: [],
  },
  async (name: string) => {
    const ctx = useContext()
    console.log(name)
  }
)

export const get = withController(
  {
    middleware: [],
  },
  async () => {
    const ctx = useContext()
    console.log(name)
  }
)

export default withController(
  {
    middleware: [],
  },
  async () => {
    const ctx = useContext()
    return ctx.query.from
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = exports.post = void 0;
const hooks_1 = require("@midwayjs/hooks");
exports.post = hooks_1.withController({
    middleware: [],
}, async function post(name) {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    console.log(name);
});
exports.get = hooks_1.withController({
    middleware: [],
}, async function get() {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    console.log(name);
});
exports.default = hooks_1.withController({
    middleware: [],
}, async function $default() {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    return ctx.query.from;
});
//# sourceMappingURL=export-variable.js.map
`;

exports[`lambda/with-default-post.ts 1`] = `
// source
import { useContext, withController } from '@midwayjs/hooks'

export default withController(
  {
    middleware: ['staticFile'],
  },
  async (name: string) => {
    const ctx = useContext()
    return 'xxx'
  }
)


// expect
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hooks_1 = require("@midwayjs/hooks");
exports.default = hooks_1.withController({
    middleware: ['staticFile'],
}, async function $default(name) {
    const _req_ctx_ = this;
    const ctx = _req_ctx_.ctx.hooks.useContext();
    return 'xxx';
});
//# sourceMappingURL=with-default-post.js.map
`;

exports[`routes should match snapshot 1`] = `
{
  "arrow-hook-ref-arrow-hook-usequery": {
    "deployName": "arrow-hook-ref-arrow-hook-usequery",
    "isFunctional": true,
    "exportFunction": "useQuery",
    "sourceFile": "src/lambda/arrow-hook-ref-arrow-hook.ts",
    "sourceFilePath": "lambda/arrow-hook-ref-arrow-hook.js",
    "handler": "arrow-hook-ref-arrow-hook-usequery.handler",
    "gatewayConfig": {
      "url": "/api/arrow-hook-ref-arrow-hook/_useQuery",
      "method": "POST",
      "meta": {
        "functionName": "arrow-hook-ref-arrow-hook-usequery"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "arrow-hook-ref-arrow-hook-useinner": {
    "deployName": "arrow-hook-ref-arrow-hook-useinner",
    "isFunctional": true,
    "exportFunction": "useInner",
    "sourceFile": "src/lambda/arrow-hook-ref-arrow-hook.ts",
    "sourceFilePath": "lambda/arrow-hook-ref-arrow-hook.js",
    "handler": "arrow-hook-ref-arrow-hook-useinner.handler",
    "gatewayConfig": {
      "url": "/api/arrow-hook-ref-arrow-hook/_useInner",
      "method": "GET",
      "meta": {
        "functionName": "arrow-hook-ref-arrow-hook-useinner"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "export-arrow-hello": {
    "deployName": "export-arrow-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/export-arrow.ts",
    "sourceFilePath": "lambda/export-arrow.js",
    "handler": "export-arrow-hello.handler",
    "gatewayConfig": {
      "url": "/api/export-arrow/_hello",
      "method": "POST",
      "meta": {
        "functionName": "export-arrow-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "export-default-anonymous": {
    "deployName": "export-default-anonymous",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/export-default-anonymous.ts",
    "sourceFilePath": "lambda/export-default-anonymous.js",
    "handler": "export-default-anonymous.handler",
    "gatewayConfig": {
      "url": "/api/export-default-anonymous",
      "method": "GET",
      "meta": {
        "functionName": "export-default-anonymous"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "export-default-async-arrow": {
    "deployName": "export-default-async-arrow",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/export-default-async-arrow.ts",
    "sourceFilePath": "lambda/export-default-async-arrow.js",
    "handler": "export-default-async-arrow.handler",
    "gatewayConfig": {
      "url": "/api/export-default-async-arrow",
      "method": "GET",
      "meta": {
        "functionName": "export-default-async-arrow"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "export-default-func": {
    "deployName": "export-default-func",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/export-default-func.ts",
    "sourceFilePath": "lambda/export-default-func.js",
    "handler": "export-default-func.handler",
    "gatewayConfig": {
      "url": "/api/export-default-func",
      "method": "POST",
      "meta": {
        "functionName": "export-default-func"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "export-default-named": {
    "deployName": "export-default-named",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/export-default-named.ts",
    "sourceFilePath": "lambda/export-default-named.js",
    "handler": "export-default-named.handler",
    "gatewayConfig": {
      "url": "/api/export-default-named",
      "method": "POST",
      "meta": {
        "functionName": "export-default-named"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "hook-ref-hook-usequery": {
    "deployName": "hook-ref-hook-usequery",
    "isFunctional": true,
    "exportFunction": "useQuery",
    "sourceFile": "src/lambda/hook-ref-hook.ts",
    "sourceFilePath": "lambda/hook-ref-hook.js",
    "handler": "hook-ref-hook-usequery.handler",
    "gatewayConfig": {
      "url": "/api/hook-ref-hook/_useQuery",
      "method": "POST",
      "meta": {
        "functionName": "hook-ref-hook-usequery"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "hook-ref-hook-useinner": {
    "deployName": "hook-ref-hook-useinner",
    "isFunctional": true,
    "exportFunction": "useInner",
    "sourceFile": "src/lambda/hook-ref-hook.ts",
    "sourceFilePath": "lambda/hook-ref-hook.js",
    "handler": "hook-ref-hook-useinner.handler",
    "gatewayConfig": {
      "url": "/api/hook-ref-hook/_useInner",
      "method": "GET",
      "meta": {
        "functionName": "hook-ref-hook-useinner"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "hook-ref-lambda-hello": {
    "deployName": "hook-ref-lambda-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/hook-ref-lambda.ts",
    "sourceFilePath": "lambda/hook-ref-lambda.js",
    "handler": "hook-ref-lambda-hello.handler",
    "gatewayConfig": {
      "url": "/api/hook-ref-lambda/_hello",
      "method": "GET",
      "meta": {
        "functionName": "hook-ref-lambda-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "import-hook-hello": {
    "deployName": "import-hook-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/import-hook.ts",
    "sourceFilePath": "lambda/import-hook.js",
    "handler": "import-hook-hello.handler",
    "gatewayConfig": {
      "url": "/api/import-hook/_hello",
      "method": "GET",
      "meta": {
        "functionName": "import-hook-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "index-hello": {
    "deployName": "index-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/index.ts",
    "sourceFilePath": "lambda/index.js",
    "handler": "index-hello.handler",
    "gatewayConfig": {
      "url": "/api/_hello",
      "method": "GET",
      "meta": {
        "functionName": "index-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "lambda-ref-hook-hello": {
    "deployName": "lambda-ref-hook-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/lambda-ref-hook.ts",
    "sourceFilePath": "lambda/lambda-ref-hook.js",
    "handler": "lambda-ref-hook-hello.handler",
    "gatewayConfig": {
      "url": "/api/lambda-ref-hook/_hello",
      "method": "GET",
      "meta": {
        "functionName": "lambda-ref-hook-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "lambda-ref-lambda-hello": {
    "deployName": "lambda-ref-lambda-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/lambda-ref-lambda.ts",
    "sourceFilePath": "lambda/lambda-ref-lambda.js",
    "handler": "lambda-ref-lambda-hello.handler",
    "gatewayConfig": {
      "url": "/api/lambda-ref-lambda/_hello",
      "method": "POST",
      "meta": {
        "functionName": "lambda-ref-lambda-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "lambda-ref-lambda-hello2": {
    "deployName": "lambda-ref-lambda-hello2",
    "isFunctional": true,
    "exportFunction": "hello2",
    "sourceFile": "src/lambda/lambda-ref-lambda.ts",
    "sourceFilePath": "lambda/lambda-ref-lambda.js",
    "handler": "lambda-ref-lambda-hello2.handler",
    "gatewayConfig": {
      "url": "/api/lambda-ref-lambda/_hello2",
      "method": "POST",
      "meta": {
        "functionName": "lambda-ref-lambda-hello2"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "normal-function-hello": {
    "deployName": "normal-function-hello",
    "isFunctional": true,
    "exportFunction": "hello",
    "sourceFile": "src/lambda/normal-function.ts",
    "sourceFilePath": "lambda/normal-function.js",
    "handler": "normal-function-hello.handler",
    "gatewayConfig": {
      "url": "/api/normal-function/_hello",
      "method": "GET",
      "meta": {
        "functionName": "normal-function-hello"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "recursion-recursion": {
    "deployName": "recursion-recursion",
    "isFunctional": true,
    "exportFunction": "recursion",
    "sourceFile": "src/lambda/recursion.ts",
    "sourceFilePath": "lambda/recursion.js",
    "handler": "recursion-recursion.handler",
    "gatewayConfig": {
      "url": "/api/recursion/_recursion",
      "method": "POST",
      "meta": {
        "functionName": "recursion-recursion"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-default-post": {
    "deployName": "with-default-post",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/with-default-post.ts",
    "sourceFilePath": "lambda/with-default-post.js",
    "handler": "with-default-post.handler",
    "gatewayConfig": {
      "url": "/api/with-default-post",
      "method": "POST",
      "meta": {
        "functionName": "with-default-post"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "ref-foo-reffoo": {
    "deployName": "ref-foo-reffoo",
    "isFunctional": true,
    "exportFunction": "refFoo",
    "sourceFile": "src/lambda/ref/foo.ts",
    "sourceFilePath": "lambda/ref/foo.js",
    "handler": "ref-foo-reffoo.handler",
    "gatewayConfig": {
      "url": "/api/ref/foo/_refFoo",
      "method": "GET",
      "meta": {
        "functionName": "ref-foo-reffoo"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "ref-bar-bar": {
    "deployName": "ref-bar-bar",
    "isFunctional": true,
    "exportFunction": "bar",
    "sourceFile": "src/lambda/ref/bar.ts",
    "sourceFilePath": "lambda/ref/bar.js",
    "handler": "ref-bar-bar.handler",
    "gatewayConfig": {
      "url": "/api/ref/bar/_bar",
      "method": "GET",
      "meta": {
        "functionName": "ref-bar-bar"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-default-arrow": {
    "deployName": "with-export-default-arrow",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/with/export-default-arrow.ts",
    "sourceFilePath": "lambda/with/export-default-arrow.js",
    "handler": "with-export-default-arrow.handler",
    "gatewayConfig": {
      "url": "/api/with/export-default-arrow",
      "method": "GET",
      "meta": {
        "functionName": "with-export-default-arrow"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-default-expression": {
    "deployName": "with-export-default-expression",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/with/export-default-expression.ts",
    "sourceFilePath": "lambda/with/export-default-expression.js",
    "handler": "with-export-default-expression.handler",
    "gatewayConfig": {
      "url": "/api/with/export-default-expression",
      "method": "GET",
      "meta": {
        "functionName": "with-export-default-expression"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-default-named": {
    "deployName": "with-export-default-named",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/with/export-default-named.ts",
    "sourceFilePath": "lambda/with/export-default-named.js",
    "handler": "with-export-default-named.handler",
    "gatewayConfig": {
      "url": "/api/with/export-default-named",
      "method": "GET",
      "meta": {
        "functionName": "with-export-default-named"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-variable-post": {
    "deployName": "with-export-variable-post",
    "isFunctional": true,
    "exportFunction": "post",
    "sourceFile": "src/lambda/with/export-variable.ts",
    "sourceFilePath": "lambda/with/export-variable.js",
    "handler": "with-export-variable-post.handler",
    "gatewayConfig": {
      "url": "/api/with/export-variable/_post",
      "method": "POST",
      "meta": {
        "functionName": "with-export-variable-post"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-variable-get": {
    "deployName": "with-export-variable-get",
    "isFunctional": true,
    "exportFunction": "get",
    "sourceFile": "src/lambda/with/export-variable.ts",
    "sourceFilePath": "lambda/with/export-variable.js",
    "handler": "with-export-variable-get.handler",
    "gatewayConfig": {
      "url": "/api/with/export-variable/_get",
      "method": "GET",
      "meta": {
        "functionName": "with-export-variable-get"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  },
  "with-export-variable": {
    "deployName": "with-export-variable",
    "isFunctional": true,
    "exportFunction": "",
    "sourceFile": "src/lambda/with/export-variable.ts",
    "sourceFilePath": "lambda/with/export-variable.js",
    "handler": "with-export-variable.handler",
    "gatewayConfig": {
      "url": "/api/with/export-variable",
      "method": "GET",
      "meta": {
        "functionName": "with-export-variable"
      }
    },
    "event": {
      "http": {
        "basePath": "/api",
        "underscore": true
      }
    }
  }
}
`;
