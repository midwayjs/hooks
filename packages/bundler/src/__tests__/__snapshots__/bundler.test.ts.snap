// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate client 1`] = `"// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten."`;

exports[`generate client 2`] = `
// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten.
import { http as rpc$0 } from '@midwayjs/rpc'

        export  function get (...args) {
          const route = get.route;
          return rpc$0(...args, route)
        };
        get.route = {
          trigger: {"type":"HTTP","method":"GET","path":"/get"},
          functionId: 'index-get',
          useInputMetadata: false,
        };
      

        export  function post (...args) {
          const route = post.route;
          return rpc$0(...args, route)
        };
        post.route = {
          trigger: {"type":"HTTP","method":"POST","path":"/post"},
          functionId: 'index-post',
          useInputMetadata: false,
        };
      

        export  function put (...args) {
          const route = put.route;
          return rpc$0(...args, route)
        };
        put.route = {
          trigger: {"type":"HTTP","method":"PUT","path":"/put"},
          functionId: 'index-put',
          useInputMetadata: false,
        };
      

        export  function del (...args) {
          const route = del.route;
          return rpc$0(...args, route)
        };
        del.route = {
          trigger: {"type":"HTTP","method":"DELETE","path":"/del"},
          functionId: 'index-del',
          useInputMetadata: false,
        };
      

        export  function patch (...args) {
          const route = patch.route;
          return rpc$0(...args, route)
        };
        patch.route = {
          trigger: {"type":"HTTP","method":"PATCH","path":"/patch"},
          functionId: 'index-patch',
          useInputMetadata: false,
        };
      

        export  function head (...args) {
          const route = head.route;
          return rpc$0(...args, route)
        };
        head.route = {
          trigger: {"type":"HTTP","method":"HEAD","path":"/head"},
          functionId: 'index-head',
          useInputMetadata: false,
        };
      

        export  function options (...args) {
          const route = options.route;
          return rpc$0(...args, route)
        };
        options.route = {
          trigger: {"type":"HTTP","method":"OPTIONS","path":"/options"},
          functionId: 'index-options',
          useInputMetadata: false,
        };
      

        export default function $default (...args) {
          const route = $default.route;
          return rpc$0(...args, route)
        };
        $default.route = {
          trigger: {"type":"HTTP","method":"ALL","path":"/"},
          functionId: 'index',
          useInputMetadata: false,
        };
      
`;

exports[`with requestClient generate client 1`] = `
"// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten.
import { http as rpc$0 } from '@midwayjs/rpc'
import { ws as rpc$1 } from '@midwayjs/rpc'

        export  function get (...args) {
          const route = get.route;
          return rpc$0(...args, route)
        };
        get.route = {
          trigger: {\\"type\\":\\"HTTP\\",\\"method\\":\\"GET\\",\\"path\\":\\"/server/api/get\\"},
          functionId: 'server-api-index-get',
          useInputMetadata: false,
        };
      

        export  function custom (...args) {
          const route = custom.route;
          return rpc$1(...args, route)
        };
        custom.route = {
          trigger: {\\"type\\":\\"Custom\\",\\"isCustom\\":true},
          functionId: 'server-api-index-custom',
          useInputMetadata: false,
        };
      "
`;

exports[`with requestClient generate multi client 1`] = `
// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten.
import { http as rpc$0 } from '@midwayjs/rpc'
import { cloud as rpc$1 } from 'cloud-invoker'

        export  function get (...args) {
          const route = get.route;
          return rpc$0(...args, route)
        };
        get.route = {
          trigger: {"type":"HTTP","method":"GET","path":"/server/api/get"},
          functionId: 'server-api-index-get',
          useInputMetadata: false,
        };
      

        export  function custom (...args) {
          const route = custom.route;
          return rpc$1(...args, route)
        };
        custom.route = {
          trigger: {"type":"Custom","isCustom":true},
          functionId: 'server-api-index-custom',
          useInputMetadata: false,
        };
      
`;

exports[`with requestClient should not generate client 1`] = `"// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten."`;
