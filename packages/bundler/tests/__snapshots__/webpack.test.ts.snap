// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unplugin-hooks webpack Compile lambda 1`] = `
// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten.
import { http as rpc$0 } from '@midwayjs/rpc';
export default function $default(...args) {
  const route = $default.route;
  return rpc$0(...args, route);
}
$default.route = {
  trigger: { type: 'HTTP', method: 'GET', path: '/' },
  functionId: 'lambda-index',
  useInputMetadata: false,
};
export function usePost(...args) {
  const route = usePost.route;
  return rpc$0(...args, route);
}
usePost.route = {
  trigger: { type: 'HTTP', method: 'POST', path: '/usePost' },
  functionId: 'lambda-index-usepost',
  useInputMetadata: false,
};
export function withQuery(...args) {
  const route = withQuery.route;
  return rpc$0(...args, route);
}
withQuery.route = {
  trigger: { type: 'HTTP', method: 'GET', path: '/withQuery' },
  functionId: 'lambda-index-withquery',
  useInputMetadata: true,
};

`;

exports[`unplugin-hooks webpack Compile render 1`] = `
// This file is auto-generated by @midwayjs/bundler. Any changes will be overwritten.
import { http as rpc$0 } from '@midwayjs/rpc';
export function bar(...args) {
  const route = bar.route;
  return rpc$0(...args, route);
}
bar.route = {
  trigger: { type: 'HTTP', method: 'GET', path: '/bar/*' },
  functionId: 'render-index-bar',
  useInputMetadata: false,
};
export default function $default(...args) {
  const route = $default.route;
  return rpc$0(...args, route);
}
$default.route = {
  trigger: { type: 'HTTP', method: 'GET', path: '/*' },
  functionId: 'render-index',
  useInputMetadata: false,
};
export function foo(...args) {
  const route = foo.route;
  return rpc$0(...args, route);
}
foo.route = {
  trigger: { type: 'HTTP', method: 'GET', path: '/foo/*' },
  functionId: 'render-index-foo',
  useInputMetadata: false,
};

`;

exports[`unplugin-hooks webpack non-lambda files should not be compiled 1`] = `
export function isTrue(value) {
  return value === 'true' || value === true;
}

`;
